name: deploy
on:
  push:
    branches:
      - "main"
  workflow_dispatch: {}
jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      checks: write
      contents: write
      actions: write
    env:
      CI: "true"
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ca-central-1
      - name: Set git identity
        run: |-
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
      - name: Install dependencies
        run: yarn install --check-files --frozen-lockfile
      - name: build
        run: npx projen build
      - name: Check for changes
        id: git_diff
        run: git diff --exit-code || echo "::set-output name=has_changes::true"
      - if: steps.git_diff.outputs.has_changes
        name: Commit and push changes (if changed)
        run:
          'git add . && git commit -m "chore: self mutation" && git push origin
          HEAD:${{ github.event.pull_request.head.ref }}'
      - if: steps.git_diff.outputs.has_changes
        name: Update status check (if changed)
        run:
          gh api -X POST /repos/${{ github.event.pull_request.head.repo.full_name
          }}/check-runs -F name="build" -F head_sha="$(git rev-parse HEAD)" -F
          status="completed" -F conclusion="success"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - if: steps.git_diff.outputs.has_changes
        name: Cancel workflow (if changed)
        run:
          gh api -X POST /repos/${{ github.event.pull_request.head.repo.full_name
          }}/actions/runs/${{ github.run_id }}/cancel
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: cdk synth
        uses: youyo/aws-cdk-github-actions@v2
        with:
          cdk_subcommand: "synth"
          cdk_version: "1.133.0"
      - name: cdk deploy
        uses: youyo/aws-cdk-github-actions@v2
        with:
          cdk_subcommand: "deploy"
          cdk_version: "1.133.0"
          cdk_args: "--require-approval never"
